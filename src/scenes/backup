import React, { useState, useEffect } from "react";
import Navbar from "../components/common/Navbar";
import Footer from "../components/common/Footer";
import RestaurantCard from "../restaurants page/RestaurantCard";
import LoginForm from "../components/common/LoginForm";
import CityCard from "../restaurants page/CityCard";
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import { useNavigate } from "react-router-dom";



function LoggedIn({
  selectedCuisine, selectedFood, budget,
  setSelectedCuisine, setSelectedFood, setBudget,
  setUser, user
}) {
  
  const [topCity, setTopCity] = useState(
    JSON.parse(window.localStorage.getItem("topCity"))
  );
  const [matchingRestaurants, setMatchingRestaurants] = useState([]);
  const [destinations, setDestinations] = useState([]);
 
  useEffect(() => {
    if (user && topCity) {
      let data = {
        cuisine: selectedCuisine,
        food: selectedFood,
        budget: budget,
        city: topCity.name
      }
      console.log (data)
      fetch(`${process.env.REACT_APP_API_URL}/addDestination/${user.uid}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      })
      .then((response) => response.json())
      .then((responseData) => {
        console.log (responseData)
        setDestinations (responseData.destinations)
      })
    }
  }, [topCity]);

  useEffect(() => {
    const data = {
      cuisine: selectedCuisine,
      food: selectedFood,
      budget: budget,
    };
    fetch(`${process.env.REACT_APP_API_URL}/search/${topCity.name}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((response) => response.json())
      .then((data) => {
        console.log(topCity);
        setMatchingRestaurants(data);
      })
      .catch(alert);
  }, [topCity]);

  const navigate = useNavigate();
  const handleSubmit = (e) => {
    navigate("/")
  }

  return ( 
    <>
      <Navbar user={user}/>
      {
       user ? ( 
          console.log (destinations)
          destinations ? destinations.map ( item => {
          <CityCard
            topCity={item}
          /> }
          )  : 
            <Button onClick={(e) => {
              e.preventDefault();
              handleSubmit(e)}}
          variant="contained" 
          style={{ width: "150px", height: "50px", marginBottom: "20px", fontSize: "15px"}} sx={{ mt: 3, mb: 2 }}>Find New Destination</Button>
          
      ): (
        <LoginForm setUser={setUser} type="login"/>
      )
    }
     
      
      <Footer />
    </>
  );
}

export default LoggedIn;
